apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.slotbooking_analytics.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "slotbooking_analytics.labels" . | nindent 4 }}
spec:
  {{- if eq .Values.env "prod" }}
  replicas: 2
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.slotbooking_analytics.name }}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/{{ .Values.slotbooking_analytics.name }}.logs: '[{"service":"{{ .Chart.Name }}", "source":"{{ .Values.slotbooking_analytics.name }}"}]'
        ad.datadoghq.com/tags: '{"env": "{{ .Values.env }}", "service":"{{ .Chart.Name }}", "source":"{{ .Values.slotbooking_analytics.name }}"}'
        prometheus.io/scrape: "false"
        supplystack.io/env: {{ .Values.env }}
      labels:
        app.kubernetes.io/name: {{ .Values.slotbooking_analytics.name }}
    spec:
      {{- if eq .Values.env "prod" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ .Values.slotbooking_analytics.name }}
            topologyKey: failure-domain.beta.kubernetes.io/zone
      {{- end }}
      {{- if ne .Values.env "prod" }}
      nodeSelector:
        lifecycle: Ec2Spot-m4-m5
      tolerations:
      - key: spotInstance
        operator: Equal
        value: tolerate
        effect: NoSchedule
      {{- end }}
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      automountServiceAccountToken: false
      enableServiceLinks: false
      initContainers:
      - name: {{ .Values.slotbooking_analytics.name }}-init
        image: "748094632676.dkr.ecr.eu-west-1.amazonaws.com/analytics/init-container:{{ .Values.slotbooking_analytics.image.tag | default .Chart.AppVersion }}"
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: APPLICATION
          value: analytics
        - name: SERVICE
          value: {{ .Values.slotbooking_analytics.name }}
        - name: CONSUL_ACL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: CONSUL_ACL_TOKEN
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.env }}
        - name: CONSUL_HOST
          value: consul-redirector.consul
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: DB_PASSWORD
        {{- range $.Values.slotbooking_analytics.extra_secrets }}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secret }}
              key: {{ . }}
        {{- end }}
      containers:
      - name: {{ .Values.slotbooking_analytics.name }}
        securityContext:
          allowPrivilegeEscalation: false
        image: "{{ .Values.slotbooking_analytics.image.repository }}:{{ .Values.slotbooking_analytics.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        {{- if $.Values.enable_tracing }}
        - name: JAVA_TOOL_OPTIONS
          value: '-javaagent:/opt/opentelemetry-javaagent-all.jar'
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name={{ $.Values.env }}-{{ $.Chart.Name }}-{{ .Values.slotbooking_analytics.name }},job={{ $.Values.env }}-{{ $.Chart.Name }}/{{ .Values.slotbooking_analytics.name }}
        - name: OTEL_METRICS_EXPORTER
          value: none
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://$(HOST_IP):4317
        {{- end }}
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.env }}
        - name: CONSUL_ACL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: CONSUL_ACL_TOKEN
        - name: CONSUL_HOST
          value: consul-redirector.consul
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: DB_PASSWORD
        {{- range $.Values.slotbooking_analytics.extra_secrets }}
        - name: {{ . }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.secret }}
              key: {{ . }}
        {{- end }}
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret }}
              key: KAFKA_PASSWORD
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 300
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
        resources:
          requests:
            cpu: 100m
            memory: 768Mi
          limits:
            memory: 768Mi