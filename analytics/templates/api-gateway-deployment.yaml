apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api_gateway.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "api_gateway.labels" . | nindent 4 }}
spec:
  {{- if eq .Values.env "prod" }}
  replicas: 2
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.api_gateway.name }}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/{{ .Values.api_gateway.name }}.logs: '[{"service":"{{ .Chart.Name }}", "source":"{{ .Values.api_gateway.name }}"}]'
        ad.datadoghq.com/tags: '{"env": "{{ .Values.env }}", "service":"{{ .Chart.Name }}", "source":"{{ .Values.api_gateway.name }}"}'
        prometheus.io/scrape: "false"
      labels:
        app.kubernetes.io/name: {{ .Values.api_gateway.name }}
    spec:
      {{- if eq .Values.env "prod" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ .Values.api_gateway.name }}
            topologyKey: failure-domain.beta.kubernetes.io/zone
      {{- end }}
      {{- if ne .Values.env "prod" }}
      nodeSelector:
        lifecycle: Ec2Spot-m4-m5
      tolerations:
      - key: spotInstance
        operator: Equal
        value: tolerate
        effect: NoSchedule
      {{- end }}
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      automountServiceAccountToken: false
      enableServiceLinks: false
      containers:
        - name: {{ .Values.api_gateway.name }}
          securityContext:
            allowPrivilegeEscalation: false
          image: "{{ .Values.api_gateway.image.repository }}:{{ .Values.api_gateway.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
          - name: JAVA_TOOL_OPTIONS
            value: ''
          - name: SPRING_PROFILES_ACTIVE
            value: {{ .Values.env }}
          - name: CONSUL_ACL_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret }}
                key: CONSUL_ACL_TOKEN
          - name: CONSUL_HOST
            value: consul-redirector.consul
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 512Mi
