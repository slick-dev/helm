kind: ConfigMap
metadata:
  name: agent-daemonset
  namespace: grafana-agent
apiVersion: v1
data:
  agent.yaml: |
    logs:
      configs:
        - clients:
            - url: {{ .Values.logs.url }}
              basic_auth:
                username: {{ .Values.logs.username }}
                password: ${API_KEY}
              external_labels:
                cluster: ${CLUSTER}
                hostname: ${HOSTNAME}
          name: default
          positions:
            filename: /tmp/grafana-agent/positions/default.yml
          scrape_configs:
            - job_name: default
              kubernetes_sd_configs:
                - role: pod
              pipeline_stages:
                - cri: {}
                - match: 
                    # --------------------------------------
                    # Ruleset for controltower namespaces
                    selector: '{ namespace=~".+-controltower-.+", namespace!~".+-controltower-dhl", namespace!="prod-controltower-dhlspl" }'
                    stages:
                      ########################
                      # Multine merging
                      - multiline:
                          # Identify zero-width space as first line of a multiline block.
                          # Note the string should be in single quotes.
                          firstline: '^\x{200B}\{'
                          max_wait_time: 3s
                      - replace:
                          expression: '^(\x{200B})'
                          replace: ''
                      - replace:
                          expression: '([\n])'
                          replace: ''
                      ########################
                      # Convert non-json messages to json (shell script outputs etc)
                      - replace:
                          expression: '^([^\{].+[^\}])$'
                          replace: '{"timestamp":"{{ .time }}","level":"{{ .stream }}","message":"{{ .Value }}"}'
                      - replace:
                          expression: \"level\":\"(stdout)\"
                          replace: 'INFO'
                      - replace:
                          expression: \"level\":\"(stderr)\"
                          replace: 'ERROR'
                      ########################
                - json:
                    expressions:
                      timestamp: timestamp
                - labeldrop:
                    - stream
                    - filename
                - timestamp:
                    source: timestamp
                    format: RFC3339Nano
              relabel_configs:
                - source_labels:
                    - __meta_kubernetes_pod_node_name
                  target_label: __host__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - action: replace
                  replacement: $1
                  separator: /
                  source_labels:
                    - __meta_kubernetes_namespace
                    - __meta_kubernetes_pod_name
                  target_label: job
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_container_name
                  target_label: container
                - replacement: /var/log/pods/*$1/*.log
                  separator: /
                  source_labels:
                    - __meta_kubernetes_pod_uid
                    - __meta_kubernetes_pod_container_name
                  target_label: __path__
                - source_labels: [__meta_kubernetes_pod_annotation_supplystack_io_env]
                  action: replace
                  target_label: env
                - source_labels: [__meta_kubernetes_pod_annotation_supplystack_io_customer]
                  action: replace
                  target_label: customer
    server:
      http_listen_port: 8080
      log_level: warn
    metrics:
      wal_directory: /tmp/grafana-agent/wal
      global:
        scrape_interval: 60s
        remote_write:
        - url: {{ .Values.metrics.url }}
          basic_auth:
            username: {{ .Values.metrics.username }}
            password: ${API_KEY}
        external_labels:
          cluster: {{ .Values.cluster }}
    traces:
      configs:
      - name: default
        attributes:
          actions:
          - action: upsert
            key: cluster
            value: ${CLUSTER}
        batch:
          send_batch_size: 10000
          timeout: 10s
        receivers:
          otlp:
            protocols:
              grpc:
        remote_write:
        - endpoint: {{ .Values.traces.endpoint }}
          basic_auth:
            username: {{ .Values.traces.username }}
            password: ${API_KEY}
    integrations:   
      node_exporter:
        enabled: true
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: node_scrape_.*
            action: drop 
